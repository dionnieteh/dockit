generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_PUBLIC_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String   @unique
  password    String
  role        String
  institution String?
  purpose     String?
  Job         Jobs[]
}

model Jobs {
  id             String    @id @default(cuid())
  userId         Int
  name           String
  gridSizeX      Int
  gridSizeY      Int
  gridSizeZ      Int
  status         JobStatus @default(Queued)
  errorMessage   String?
  createdAt      DateTime  @default(now())
  completedAt    DateTime?
  centerX        Float
  centerY        Float
  centerZ        Float
  energyRange    Int
  exhaustiveness Int
  numModes       Int
  verbosity      Int
  user           User      @relation(fields: [userId], references: [id])
}

model ReceptorFile {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  description String?
  filePath    String   @db.VarChar(255)
  uploadedOn  DateTime @default(now())
  fileSize    Int
}

model DefaultParameters {
  id             Int      @id @default(1)
  gridSizeX      String
  gridSizeY      String
  gridSizeZ      String
  centerX        String
  centerY        String
  centerZ        String
  numModes       String
  energyRange    String
  verbosity      String
  exhaustiveness String
  updatedBy      Int
  updatedAt      DateTime @default(now()) @updatedAt
}

enum JobStatus {
  Queued
  Processing
  Complete
  Error
}
