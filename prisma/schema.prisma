// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_PUBLIC_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String    @unique
  password    String
  role        String
  institution String
  purpose     String
  Session     Session[]
  Job         Job[]
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  sessionId String   @unique // Optional, you could store a session identifier here
  expiresAt DateTime // When the session will expire
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Job {
  id              String    @id @default(cuid())
  user            User      @relation(fields: [userId], references: [id])
  userId          Int
  name            String
  gridSizeX       Int
  gridSizeY       Int
  gridSizeZ       Int
  status          JobStatus @default(queued)
  progress        Int       @default(0) // percentage 0â€“100
  progressMessage String?
  errorMessage    String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  completedAt     DateTime?
}

enum JobStatus {
  queued
  processing
  complete
  error
}
